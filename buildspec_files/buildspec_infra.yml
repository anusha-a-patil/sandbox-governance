version: 0.2
phases:
  build:
    commands:
      - |
        echo Build started on `date`
        filename="sample_config_file.txt"
        file=$CODEBUILD_SRC_DIR/config_files/"${filename}"
        echo $file
        echo Printing env variables
        echo "${env}"
        echo "${domain}"
        KEY="${domain}_${env}"
        echo "${KEY}"
        VALUE=$(grep "^${KEY}=" "$file" | sed -e "s/^${KEY}=//")
        if [ -z "$VALUE" ]; then
        echo "Key '$KEY' not found in $file"
        else echo "The value for '$KEY' is '$VALUE'"
        fi
        cfnfilename="main.yaml"
        cfnfile=$CODEBUILD_SRC_DIR/cfn/"${cfnfilename}"
        echo $cfnfile
        iamrolefilename="iam_roles.yaml"
        iamrolefile=$CODEBUILD_SRC_DIR/cfn/"${iamrolefilename}"
        echo $iamrolefile
        lffilename="lakeformation.yaml"
        lffile=$CODEBUILD_SRC_DIR/cfn/"${lffilename}"
        echo $lffile
        gluedbfilename="glue_database.yaml"
        gluedbfile=$CODEBUILD_SRC_DIR/cfn/"${gluedbfilename}"
        echo $gluedbfile
        lfpermissionsfilename="lfpermissions.yaml"
        lfpermissionsfile=$CODEBUILD_SRC_DIR/cfn/"${lfpermissionsfilename}"
        echo $lfpermissionsfile
        gluejobfilename="glue_job.yaml"
        gluejobfile=$CODEBUILD_SRC_DIR/cfn/"${gluejobfilename}"
        echo $gluejobfile
        lambdafilename="lambda.yaml"
        lambdafile=$CODEBUILD_SRC_DIR/cfn/"${lambdafilename}"
        echo $lambdafile                                                          
        aws s3 cp $iamrolefile s3://mycicd-bucket-apat/cicd-files/
        aws s3 cp $gluedbfile s3://mycicd-bucket-apat/cicd-files/
        aws s3 cp $lffile s3://mycicd-bucket-apat/cicd-files/
        aws s3 cp $lfpermissionsfile s3://mycicd-bucket-apat/cicd-files/
        aws s3 cp $gluejobfile s3://mycicd-bucket-apat/cicd-files/
        aws s3 cp $lambdafile s3://mycicd-bucket-apat/cicd-files/                          
        iamroleurl=https://s3.amazonaws.com/mycicd-bucket-apat/cicd-files/iam_roles.yaml
        GlueDBurl=https://s3.amazonaws.com/mycicd-bucket-apat/cicd-files/glue_database.yaml
        lfurl=https://s3.amazonaws.com/mycicd-bucket-apat/cicd-files/lakeformation.yaml
        lfpermissionsurl=https://s3.amazonaws.com/mycicd-bucket-apat/cicd-files/lfpermissions.yaml
        gluejoburl=https://s3.amazonaws.com/mycicd-bucket-apat/cicd-files/glue_job.yaml
        lambdaurl=https://s3.amazonaws.com/mycicd-bucket-apat/cicd-files/lambda.yaml 

      # Create a zip file of the Lambda code
      - cd $CODEBUILD_SRC_DIR/cfn/script/lambda  # Change to your Lambda code directory
      - zip -r function.zip ./*
      
      # Copy the zip file to S3
      - aws s3 cp function.zip s3://mycicd-bucket-ap/function.zip
      
      # Optional: Print success message
      - echo "Successfully uploaded Lambda package to s3://mycicd-bucket-ap/function.zip"        
        aws cloudformation deploy \
          --template-file $cfnfile \
          --stack-name datamesh-stack \
          --parameter-overrides EnvType="${env}" DomainName="${domain}" IAMRolePath="${iamroleurl}" GlueDBPath="${GlueDBurl}" lfPath="${lfurl}" lfpermissionsPath="${lfpermissionsurl}" GlueJobPath="${gluejoburl}" LambdaPath="${lambdaurl}"\
          --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM
  post_build:
    commands:
      - aws cloudformation describe-stack-events --stack-name datamesh-stack
      - echo Build complete